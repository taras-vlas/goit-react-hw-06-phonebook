{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/Contact-ListItem.module.css","redux/phonebook/phonebook-actions-types.js","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","App.jsx","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","phonebookActionsTypes","name","number","type","payload","contact","id","uuidv4","deleteContact","changeFilter","ContactForm","state","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","onCreateContact","className","styles","Form","onSubmit","this","Label","Input","pattern","title","required","onChange","Button","Component","mapDispatchToProps","phonebookActions","connect","useStyles","createUseStyles","display","marginBottom","width","fontSize","color","cursor","font","marginTop","borderRadius","border","outline","boxShadow","onChangeFilter","contacts","phonebook","filter","classes","length","ContactListItem","onDelete","List_item","List_button","onClick","ContactList","prevProp","prevState","prevContacts","currentContacts","localStorage","setItem","JSON","stringify","onDeleteItem","List","map","styled","ul","toLowerCase","includes","Section","section","App","createReducer","action","find","alert","combineReducers","preloadedState","parse","getItem","store","configureStore","reducer","phonebookReducer","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,mBCAlID,EAAOC,QAAU,CAAC,UAAY,oCAAoC,YAAc,wC,+KCGjE,EAJH,gBAIG,EAHA,mBAGA,EAFA,mB,eCoBA,GAAEC,WAjBEC,YAAaC,GAA2B,SAACC,EAAMC,GAChE,MAAO,CACLC,KAAMH,EACNI,QAAS,CAAEC,QAAS,CACNC,GAAIC,cACJN,OACAC,eAWWM,cALPT,YAAcC,GAKQS,aAHvBV,YAAcC,I,OCZ7BU,E,4MACJC,MAAQ,CACNV,KAAM,GACNC,OAAQ,I,EAGVU,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRZ,EAAgBY,EAAhBZ,KAAMa,EAAUD,EAAVC,MAEd,EAAKC,SAAL,eACGd,EAAOa,K,EAKZE,aAAe,SAACC,GACdA,EAAMC,iBACN,MAAyB,EAAKP,MAAtBV,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OAAID,GAAQC,GACV,EAAKiB,MAAMC,gBAAgB,EAAKT,MAAMV,KAAM,EAAKU,MAAMT,QAChD,EAAKa,SAAS,CAAEd,KAAM,GAAIC,OAAQ,MAGpC,M,4CAIT,WAEE,OACE,uBAAMmB,UAAWC,IAAOC,KAAMC,SAAUC,KAAKT,aAA7C,UAEN,wBAAOK,UAAWC,IAAOI,MAAzB,iBAEY,uBACIL,UAAWC,IAAOK,MAClBxB,KAAK,OACLF,KAAK,OACL2B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRhB,MAAOW,KAAKd,MAAMV,KAClB8B,SAAUN,KAAKb,kBAGrB,wBAAOS,UAAWC,IAAOI,MAAzB,mBAEE,uBACIL,UAAWC,IAAOK,MAClBxB,KAAK,MACLF,KAAK,SACL2B,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRhB,MAAOW,KAAKd,MAAMT,OAClB6B,SAAUN,KAAKb,kBAGnB,wBAAQS,UAAWC,IAAOU,OAAQ7B,KAAK,SAAvC,gC,GA3Dc8B,aAmEpBC,EAAqB,CACzBd,gBAAiBe,EAAiBrC,YASrBsC,cAAQ,KAAMF,EAAdE,CAAoC1B,G,QC7EzC2B,EAAYC,YAAgB,CAC9BZ,MAAM,CACFa,QAAS,eACTC,aAAc,GACdC,MAAO,IACPC,SAAU,GACVC,MAAO,UACPC,OAAQ,WAGZjB,MAAO,CACHgB,MAAO,UACPE,KAAM,UACNH,SAAU,SACVI,UAAW,EACXC,aAAc,EACdC,OAAQ,oBACRP,MAAO,IACPQ,QAAS,EACT,UAAW,CACPD,OAAQ,iBACRE,UAAW,+CAwB3B,I,MAOMhB,EAAqB,CACzBiB,eAAgBhB,EAAiB1B,cASpB2B,eAjBS,SAAAzB,GACtB,MAAO,CACLyC,SAAUzC,EAAM0C,UAAUD,SAC1BtC,MAAOH,EAAM0C,UAAUC,UAcapB,EAAzBE,EApCf,YAAuD,IAArCgB,EAAoC,EAApCA,SAAWtC,EAAyB,EAAzBA,MAAOqC,EAAkB,EAAlBA,eAC5BI,EAAUlB,IAEhB,OAAIe,EAASI,OAAS,EAElB,sBAAKnC,UAAakC,EAAQ7B,MAA1B,kCAEE,uBAAOL,UAAWkC,EAAQ5B,MACxBxB,KAAK,OACLF,KAAK,SACLa,MAAOA,EACPiB,SAAU,SAAAd,GAAK,OAAIkC,EAAelC,EAAMJ,OAAOC,aAKhD,Q,iBCxBO2C,EArBQ,SAAC,GAAgC,IAA9BxD,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQwD,EAAe,EAAfA,SACvC,OACE,qBAAIrC,UAAYC,IAAOqC,UAAvB,UACG,UAAO1D,EAAO,OAASC,EACxB,wBAAQmB,UAAWC,IAAOsC,YAClBzD,KAAK,SACLF,KAAK,SACL4D,QAASH,EAHjB,wBCAAI,E,wKAEJ,SAAmBC,EAAUC,GAC3B,IAAMC,EAAeF,EAASX,SACxBc,EAAkBzC,KAAKN,MAAMiC,SAE/Ba,IAAiBC,GACnBC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUJ,M,oBAIpD,WACE,MAAmCzC,KAAKN,MAAhCiC,EAAR,EAAQA,SAAUmB,EAAlB,EAAkBA,aAElB,OAAInB,EAASI,OAAS,EACb,KAIP,cAACgB,EAAD,UACGpB,EAASqB,KAAI,YAA2B,IAAxBnE,EAAuB,EAAvBA,GAAIL,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACzB,OACE,cAAC,EAAD,CAEED,KAAMA,EACNC,OAAQA,EACRwD,SAAU,kBAAMa,EAAajE,KAHxBA,Y,GAvBO2B,aAmCpBuC,EAAOE,IAAOC,GAAV,6CAcJzC,EAAqB,CACzBqC,aAAcpC,EAAiB3B,eAGlB4B,eAbS,SAAAzB,GACtB,MAA6BA,EAAM0C,UAA3BD,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,OAGlB,MAAO,CACLF,SAHsBA,EAASE,QAAO,SAAAjD,GAAO,OAAIA,EAAQJ,KAAK2E,cAAcC,SAASvB,EAAOsB,qBAWxD1C,EAAzBE,CAA6C0B,GCpCtDgB,EAAUJ,IAAOK,QAAV,qFAMEC,EAzBH,WAEV,OACI,qCACE,eAACF,EAAD,WACE,2CACA,cAAC,EAAD,OAGF,eAACA,EAAD,WACE,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,W,eCYJ1B,EAAW6B,YA1BI,CACnB,CAAE3E,GAAI,OAAQL,KAAM,gBAAiBC,OAAQ,gBAC7C,CAAEI,GAAI,OAAQL,KAAM,iBAAkBC,OAAQ,gBAC9C,CAAEI,GAAI,OAAQL,KAAM,gBAAiBC,OAAQ,gBAC7C,CAAEI,GAAI,OAAQL,KAAM,iBAAkBC,OAAQ,kBAsBlB,mBAC3BiC,EAAiBrC,YApBD,SAACa,EAAOuE,GACzB,OAAIvE,EAAMwE,MAAK,SAAA9E,GAAO,OAAIA,EAAQJ,OAASiF,EAAO9E,QAAQC,QAAQJ,SAChEmF,MAAM,GAAD,OAAIF,EAAO9E,QAAQC,QAAQJ,KAA3B,4BACEU,GAGH,GAAN,mBAAWA,GAAX,CAAkBuE,EAAO9E,QAAQC,aAaL,cAE3B8B,EAAiB3B,eAZE,SAACG,EAAOuE,GAC5B,OAAOvE,EAAM2C,QAAO,qBAAGhD,KAAgB4E,EAAO9E,cASlB,IAKxBkD,EAAS2B,YAAe,GAAF,eACzB9C,EAAiB1B,cAZC,SAACE,EAAOuE,GAC3B,OAAOA,EAAO9E,YAeDiF,cAAgB,CAAEjC,WAAUE,WCrCrCgC,EAAiB,CACrBjC,UAAW,CACTD,SAAUiB,KAAKkB,MAAMpB,aAAaqB,QAAQ,cAAgB,KAW/CC,EAPDC,YAAe,CAC3BC,QAAS,CACPtC,UAAWuC,GAEbN,mBCLFO,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEAM,SAASC,eAAe,W","file":"static/js/main.4ddb18fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__1V2vj\",\"Label\":\"ContactForm_Label__3cgzS\",\"Input\":\"ContactForm_Input__3wK0I\",\"Button\":\"ContactForm_Button__IhdyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List_item\":\"Contact-ListItem_List_item__1mv5-\",\"List_button\":\"Contact-ListItem_List_button__15g3e\"};","const ADD = 'phonebook/add';       //   /... - уточнення\r\nconst DELETE = 'phonebook/delete';\r\nconst FILTER = 'phonebook/filter';\r\n    \r\nexport default { ADD, DELETE, FILTER };","import phonebookActionsTypes from './phonebook-actions-types';\r\nimport { v4 as uuidv4 } from 'uuid';         //версія 4 (\"на случайных данных\")\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nconst addContact = createAction(phonebookActionsTypes.ADD, (name, number) => {\r\n  return {\r\n    type: phonebookActionsTypes.ADD,\r\n    payload: { contact: {\r\n                  id: uuidv4(),\r\n                  name,\r\n                  number\r\n                }\r\n    }\r\n  }\r\n});\r\n\r\nconst deleteContact = createAction( phonebookActionsTypes.DELETE );\r\n\r\nconst changeFilter = createAction( phonebookActionsTypes.FILTER );\r\n\r\n  \r\nexport default { addContact, deleteContact, changeFilter };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const addContact = ({name, number}) => ({ \r\n//   type: phonebookActionsTypes.ADD,\r\n//   payload: { contact: { id: uuidv4(), name, number }},\r\n// });\r\n// const deleteContact = (id) => ({\r\n//   type: phonebookActionsTypes.DELETE,\r\n//   payload: { id },\r\n// }); \r\n// const changeFilter = (filter) => ({\r\n//   type: phonebookActionsTypes.FILTER,\r\n//   payload: { filter },\r\n// });","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions'\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    if (name && number) {\r\n      this.props.onCreateContact(this.state.name, this.state.number);\r\n      return this.setState({ name: '', number: '' });  // alert (...) is already in contacts`);\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\r\n        \r\n<label className={styles.Label}>\r\n            Name\r\n            <input\r\n                className={styles.Input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={styles.Label}>\r\n            Number\r\n            <input\r\n                className={styles.Input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                required\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n            />\r\n          </label>\r\n            <button className={styles.Button} type=\"submit\">\r\n              Add contact\r\n            </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onCreateContact: phonebookActions.addContact,\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onCreateContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)  (ContactForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\n\r\n    import { createUseStyles } from 'react-jss';\r\n\r\n    const useStyles = createUseStyles({\r\n        Label:{\r\n            display: 'inline-block',\r\n            marginBottom: 16,\r\n            width: 200,\r\n            fontSize: 16,\r\n            color: '#171718',\r\n            cursor: 'pointer',\r\n            }, \r\n         \r\n        Input: {\r\n            color: '#171718',\r\n            font: 'inherit',\r\n            fontSize: '0.9rem',\r\n            marginTop: 6,\r\n            borderRadius: 4,\r\n            border: '1px solid #9e9d9d',\r\n            width: 200,\r\n            outline: 0,\r\n            '&:focus': {\r\n                border: '2px solid blue',\r\n                boxShadow: '1px 1px 3px 1px rgba(41, 107, 250, 0.14)',\r\n                },\r\n            }\r\n        });\r\n\r\nfunction Filter({ contacts,  value, onChangeFilter }) {\r\n  const classes = useStyles();\r\n\r\n  if (contacts.length > 1) {\r\n    return (\r\n      <div className = {classes.Label}>\r\n        Find contacts by name\r\n        <input className={classes.Input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          onChange={event => onChangeFilter(event.target.value)} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.phonebook.contacts,\r\n    value: state.phonebook.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: phonebookActions.changeFilter,\r\n};\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)  (Filter);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Contact-ListItem.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => {\r\n  return (\r\n    <li className= {styles.List_item}>\r\n      {\"• \" + name + \":   \" + number}\r\n      <button className={styles.List_button}\r\n              type=\"button\"\r\n              name=\"delete\"\r\n              onClick={onDelete}\r\n      >\r\n          Delete\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nexport default  ContactListItem;\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport ContactListItem from './ContactListItem';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\n\r\nclass ContactList extends Component {\r\n\r\n  componentDidUpdate(prevProp, prevState) {\r\n    const prevContacts = prevProp.contacts;\r\n    const currentContacts = this.props.contacts;\r\n\r\n    if (prevContacts !== currentContacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(currentContacts));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { contacts, onDeleteItem } = this.props;\r\n\r\n    if (contacts.length < 1) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <List>\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <ContactListItem\r\n              key={id}\r\n              name={name}\r\n              number={number}\r\n              onDelete={() => onDeleteItem(id)}\r\n            />\r\n          );\r\n        })}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n\r\nconst List = styled.ul`\r\n  width: 500px;\r\n`;\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  const { contacts, filter } = state.phonebook;\r\n  const visibleContacts = contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onDeleteItem: phonebookActions.deleteContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\nimport styled from 'styled-components'\nimport AddContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nconst App = () => {\n\n  return (\n      <>\n        <Section>\n          <h1>Phonebook</h1>\n          <AddContactForm />\n        </Section>\n      \n        <Section>\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </Section>\n      </>  \n  )\n}\n\n\nconst Section = styled.section`\n  &:not(:last-of-type) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport default App;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport phonebookActions from './phonebook-actions';\r\n\r\nconst initContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"380444591256\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"380444438912\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"380446451779\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"380442279126\" },\r\n];\r\n\r\nconst addContact = (state, action) => {\r\n  if (state.find(contact => contact.name === action.payload.contact.name)) {\r\n    alert(`${action.payload.contact.name} is already in contacts`);\r\n    return state\r\n  }\r\n\r\n  return [...state, action.payload.contact]\r\n}\r\n\r\nconst deleteContact = (state, action) => {\r\n  return state.filter(({ id }) => id !== action.payload);\r\n}\r\n\r\nconst changeFilter = (state, action) => {\r\n  return action.payload\r\n}\r\n\r\n                            /* reducers */\r\n\r\nconst contacts = createReducer(initContacts, {\r\n  [phonebookActions.addContact]: addContact,\r\n  [phonebookActions.deleteContact]: deleteContact,\r\n});\r\n\r\nconst filter = createReducer ('', {\r\n  [phonebookActions.changeFilter]: changeFilter,\r\n});\r\n\r\n\r\nexport default combineReducers({ contacts, filter });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { createReducer } from \"@reduxjs/toolkit\";\r\n// import {addContact, deleteContact, changeFilter } from \"./phonebook-actions\";\r\n\r\n\r\n// const contacts = [\r\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"380444591256\" },\r\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"380444438912\" },\r\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"380446451779\" },\r\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"380442279126\" },\r\n// ];\r\n\r\n// const contactsReducer = createReducer(contacts, {\r\n//   [addContact]: (state, { payload }) => [...state, payload],\r\n//   [deleteContact]: (state, { payload }) =>\r\n//     state.filter((contact) => contact.id !== payload),\r\n//  //[getContactsFromLS]: (state, { payload }) => payload,\r\n//   [changeFilter]: (state, { payload }) => payload,\r\n// });\r\n\r\n// export default contactsReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst preloadedState = {\r\n  phonebook: {\r\n    contacts: JSON.parse(localStorage.getItem('contacts')) || []\r\n  }\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer\r\n  },\r\n  preloadedState\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}